// <auto-generated />
using System;
using Empresa.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Empresa.Infrastructure.Migrations
{
    [DbContext(typeof(EmpresaDbContext))]
    partial class EmpresaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Empresa.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Empresa ABC"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Juan Pérez"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Empresa Alfa"
                        });
                });

            modelBuilder.Entity("Empresa.Domain.Entities.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Camión 1"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Excavadora A"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Camión 2"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Excavadora 3B"
                        });
                });

            modelBuilder.Entity("Empresa.Domain.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Nuevo"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "En Progreso"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Completado"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Cancelado"
                        });
                });

            modelBuilder.Entity("Empresa.Domain.Entities.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("Empresa.Domain.Entities.MovimientoEquipo", b =>
                {
                    b.Property<int>("MovimientoId")
                        .HasColumnType("int");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.HasKey("MovimientoId", "EquipoId");

                    b.HasIndex("EquipoId");

                    b.ToTable("MovimientoEquipo");
                });

            modelBuilder.Entity("Empresa.Domain.Entities.MovimientoOperario", b =>
                {
                    b.Property<int>("MovimientoId")
                        .HasColumnType("int");

                    b.Property<int>("OperarioId")
                        .HasColumnType("int");

                    b.HasKey("MovimientoId", "OperarioId");

                    b.HasIndex("OperarioId");

                    b.ToTable("MovimientoOperario");
                });

            modelBuilder.Entity("Empresa.Domain.Entities.Operario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Operarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Mario García"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Luisa Díaz"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Carlos Torres"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Lucía Romero"
                        });
                });

            modelBuilder.Entity("Empresa.Domain.Entities.Movimiento", b =>
                {
                    b.HasOne("Empresa.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Movimientos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Empresa.Domain.Entities.Estado", "Estado")
                        .WithMany("Movimientos")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Empresa.Domain.Entities.MovimientoEquipo", b =>
                {
                    b.HasOne("Empresa.Domain.Entities.Equipo", "Equipo")
                        .WithMany("Movimientos")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Empresa.Domain.Entities.Movimiento", "Movimiento")
                        .WithMany("Equipos")
                        .HasForeignKey("MovimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Movimiento");
                });

            modelBuilder.Entity("Empresa.Domain.Entities.MovimientoOperario", b =>
                {
                    b.HasOne("Empresa.Domain.Entities.Movimiento", "Movimiento")
                        .WithMany("Operarios")
                        .HasForeignKey("MovimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Empresa.Domain.Entities.Operario", "Operario")
                        .WithMany("Movimientos")
                        .HasForeignKey("OperarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movimiento");

                    b.Navigation("Operario");
                });

            modelBuilder.Entity("Empresa.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("Empresa.Domain.Entities.Equipo", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("Empresa.Domain.Entities.Estado", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("Empresa.Domain.Entities.Movimiento", b =>
                {
                    b.Navigation("Equipos");

                    b.Navigation("Operarios");
                });

            modelBuilder.Entity("Empresa.Domain.Entities.Operario", b =>
                {
                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
