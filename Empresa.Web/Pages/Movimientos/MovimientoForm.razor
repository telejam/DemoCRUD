@page "/movimientos/nuevo"
@page "/movimientos/editar/{Id:int}"
@using Empresa.Application.Dtos
@using Empresa.Web.Services
@inject MovimientoApiService MovimientoApi
@inject ClienteApiService ClienteApi
@inject EstadoApiService EstadoApi
@inject OperarioApiService OperarioApi
@inject EquipoApiService EquipoApi
@inject NavigationManager Nav

<h3>@(Id == null ? "Nuevo Movimiento" : "Editar Movimiento")</h3>

<EditForm Model="movimiento" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row mb-2">
        <div class="col">
            <label>Fecha:</label>
            <InputDate class="form-control" @bind-Value="movimiento.Fecha" />
        </div>
        <div class="col">
            <label>Cliente:</label>
            <InputSelect class="form-control" @bind-Value="movimiento.ClienteId">
                <option value="">Seleccione</option>
                @foreach (var c in clientes)
                {
                    <option value="@c.Id">@c.Nombre</option>
                }
            </InputSelect>
        </div>
        <div class="col">
            <label>Estado:</label>
            <InputSelect class="form-control" @bind-Value="movimiento.EstadoId">
                <option value="">Seleccione</option>
                @foreach (var e in estados)
                {
                    <option value="@e.Id">@e.Nombre</option>
                }
            </InputSelect>
        </div>
    </div>

    <div class="mb-2">
        <label>Asunto:</label>
        <InputText class="form-control" @bind-Value="movimiento.Asunto" />
    </div>

    <div class="mb-2">
        <label>Ubicación:</label>
        <InputText class="form-control" @bind-Value="movimiento.Ubicacion" />
    </div>

    <div class="row">
        <div class="col">
            <label>Operarios:</label>
            @foreach (var o in operarios)
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox"
                           value="@o.Id"
                           @onchange="e => Seleccionar(o.Id, movimiento.OperarioIds, e)"
                           checked="@movimiento.OperarioIds.Contains(o.Id)" />
                    <label class="form-check-label">@o.Nombre</label>
                </div>
            }
        </div>

        <div class="col">
            <label>Equipos:</label>
            @foreach (var eq in equipos)
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox"
                           value="@eq.Id"
                           @onchange="e => Seleccionar(eq.Id, movimiento.EquipoIds, e)"
                           checked="@movimiento.EquipoIds.Contains(eq.Id)" />
                    <label class="form-check-label">@eq.Nombre</label>
                </div>
            }
        </div>
    </div>

    <div class="d-flex gap-2 mt-3">
        <button class="btn btn-success" type="submit">Guardar</button>
        <button class="btn btn-secondary" @onclick='() => Nav.NavigateTo("/movimientos")'>Cancelar</button>
    </div>
</EditForm>

@code {
    [Parameter] public int? Id { get; set; }

    MovimientoDto movimiento = new();
    List<ClienteDto> clientes = new();
    List<EstadoDto> estados = new();
    List<OperarioDto> operarios = new();
    List<EquipoDto> equipos = new();

    protected override async Task OnInitializedAsync()
    {
        clientes = await ClienteApi.GetAll() ?? new();
        estados = await EstadoApi.GetAll() ?? new();
        operarios = await OperarioApi.GetAll() ?? new();
        equipos = await EquipoApi.GetAll() ?? new();

        if (Id.HasValue)
        {
            var mov = await MovimientoApi.GetById(Id.Value);
            if (mov != null) movimiento = mov;
        }
    }

    async Task Guardar()
    {
        if(Id == null)
        {
            await MovimientoApi.Create(movimiento);
        }
        else
        {
            await MovimientoApi.Update(Id.Value, movimiento);
        }

        Nav.NavigateTo("/movimientos");
    }

    void Seleccionar(int id, List<int> lista, ChangeEventArgs e)
    {
        bool marcado = (bool)e.Value;
        if (marcado)
        {
            if (!lista.Contains(id))
                lista.Add(id);
        }
        else
        {
            lista.Remove(id);
        }
    }
}
